{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAMA,IAAM,YAAY,+BAAlB;;;;;;;AAOA,IAAM,cAAc,UAAU,KAAV,kBAApB;;;;;;;AAOA,IAAM,qBAAqB,UAAU,KAAV,yBAA3B;;;;;;kBAMe,W;QAMI,M,GAAf,W;QAKsB,a,GAAtB,kB;;;;;;AAKA,kB;;;;;;AAKA,W;;;;;;AAKA,Y;;;;;;AAKA,Y;;;;;;AAKA,iB;;;;;;AAKA,oB;;;;;;AAKA,kB;;;;;;AAKA,a;;;;;;AAKA,qB;;;;;;AAMG,IAAM,oCAAc,UAAU,OAAV,6BAApB;;;;;AAKA,IAAM,wBAAQ,UAAU,OAAV,uBAAd;;;;;AAKA,IAAM,sCAAe,UAAU,OAAV,8BAArB;;;;;AAKA,IAAM,0CAAiB,UAAU,OAAV,gCAAvB;;;;;AAKA,IAAM,sCAAe,UAAU,OAAV,8BAArB;;;;;AAKA,IAAM,0BAAS,UAAU,OAAV,wBAAf;;;;;AAKA,IAAM,0BAAS,UAAU,OAAV,wBAAf;;;;;AAKA,IAAM,4BAAU,UAAU,OAAV,yBAAhB;;;;;AAKA,IAAM,4CAAkB,UAAU,OAAV,iCAAxB","file":"index.js","sourcesContent":["import ConfigBase from './Config';\nimport ConfigBuilderBase from './ConfigBuilder';\nimport ConfigCache from './ConfigCache';\nimport ConfigLoader from './ConfigLoader';\nimport ConfigFinder from './ConfigFinder';\nimport ConfigEnvironment from './ConfigEnvironment';\nimport ConfigPatternCache from './ConfigPatternCache';\nimport ConfigStringResolver from './ConfigStringResolver';\nimport ConfigPathResolver from './ConfigPathResolver';\nimport ConfigFactory from './ConfigFactory';\nimport ConfigContainer from './ConfigContainer';\nimport ConfigOptionsResolver from './ConfigOptionsResolver';\n\n/**\n * @private\n * @type {ConfigContainer}\n */\nconst container = new ConfigContainer();\n\n/**\n * Proxy class which automatically fills {@link Config} constructor dependencies\n * @class\n * @extends {Config}\n */\nconst ConfigProxy = container.proxy(ConfigBase);\n\n/**\n * Proxy class which automatically fills {@link ConfigBuilder} constructor dependencies\n * @class\n * @extends {ConfigBuilder}\n */\nconst ConfigBuilderProxy = container.proxy(ConfigBuilderBase);\n\n/**\n * @module webpack-config\n */\n\nexport default ConfigProxy;\n\nexport {\n    /**\n     * @type {ConfigProxy}\n     */\n    ConfigProxy as Config,\n\n    /**\n     * @type {ConfigBuilderProxy}\n     */\n    ConfigBuilderProxy as ConfigBuilder,\n\n    /**\n     * @type {ConfigPatternCache}\n     */\n    ConfigPatternCache,\n\n    /**\n     * @type {ConfigCache}\n     */\n    ConfigCache,\n\n    /**\n     * @type {ConfigLoader}\n     */\n    ConfigLoader,\n\n    /**\n     * @type {ConfigFinder}\n     */\n    ConfigFinder,\n\n    /**\n     * @type {ConfigEnvironment}\n     */\n    ConfigEnvironment,\n\n    /**\n     * @type {ConfigStringResolver}\n     */\n    ConfigStringResolver,\n\n    /**\n     * @type {ConfigPathResolver}\n     */\n    ConfigPathResolver,\n\n    /**\n     * @type {ConfigFactory}\n     */\n    ConfigFactory,\n\n    /**\n     * @type {ConfigOptionsResolver}\n     */\n    ConfigOptionsResolver\n};\n\n/**\n * @type {ConfigEnvironment}\n */\nexport const environment = container.resolve(ConfigEnvironment);\n\n/**\n * @type {ConfigCache}\n */\nexport const cache = container.resolve(ConfigCache);\n\n/**\n * @type {ConfigPatternCache}\n */\nexport const patternCache = container.resolve(ConfigPatternCache);\n\n/**\n * @type {ConfigStringResolver}\n */\nexport const stringResolver = container.resolve(ConfigStringResolver);\n\n/**\n * @type {ConfigPathResolver}\n */\nexport const pathResolver = container.resolve(ConfigPathResolver);\n\n/**\n * @type {ConfigLoader}\n */\nexport const loader = container.resolve(ConfigLoader);\n\n/**\n * @type {ConfigFinder}\n */\nexport const finder = container.resolve(ConfigFinder);\n\n/**\n * @type {ConfigFactory}\n */\nexport const factory = container.resolve(ConfigFactory);\n\n/**\n * @type {ConfigOptionsResolver}\n */\nexport const optionsResolver = container.resolve(ConfigOptionsResolver);\n"]}