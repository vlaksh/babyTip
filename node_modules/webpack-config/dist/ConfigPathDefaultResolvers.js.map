{"version":3,"sources":["../src/ConfigPathDefaultResolvers.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;AAQA,IAAM,gBAAgB,gBAAtB;;kBAEe;;;;;;AAMX,iBAAS;AACL,QAAI;AACA,eAAO,QAAQ,OAAR,CAAgB,KAAhB,CAAP;AACH,KAFD,CAEE,OAAO,GAAP,EAAY;AACV,eAAO,GAAP;AACH;AACJ,CAZU;;;;;;;AAmBX,iBAAS;AACL,QAAI;AACA,eAAO,QAAQ,OAAR,CAAmB,aAAnB,SAAoC,KAApC,CAAP;AACH,KAFD,CAEE,OAAO,GAAP,EAAY;AACV,eAAO,GAAP;AACH;AACJ,CAzBU;;;;;;;AAgCX;AAAA,WAAS,mBAAQ,KAAR,CAAT;AAAA,CAhCW,C","file":"ConfigPathDefaultResolvers.js","sourcesContent":["import {\n    resolve\n} from 'path';\n\n/**\n * @private\n * @type {String}\n */\nconst MODULE_PREFIX = 'webpack-config';\n\nexport default [\n    /**\n     * `require('<module-name>')`\n     * @param {String} value\n     * @returns {String|Error}\n     */\n    value => {\n        try {\n            return require.resolve(value);\n        } catch (err) {\n            return err;\n        }\n    },\n\n    /**\n     * `require('webpack-config-<name>')`\n     * @param {String} value\n     * @returns {String|Error}\n     */\n    value => {\n        try {\n            return require.resolve(`${MODULE_PREFIX}-${value}`);\n        } catch (err) {\n            return err;\n        }\n    },\n\n    /**\n     * `path.resolve('<file-name>')`\n     * @param {String} value\n     * @returns {String}\n     */\n    value => resolve(value)\n];\n"]}