{"version":3,"sources":["../src/ConfigFactory.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AAIA;;;;AACA;;;;;;;;;;AAMA,IAAM,YAAY,uBAAlB;;;;;;IAKM,a;;;;;;AAKF,2BAAY,SAAZ,EAAuB;AAAA;;AACnB,kBAAU,GAAV,CAAc,IAAd,EAAoB,SAApB;AACH;;;;;;;;;;;;;;;;;iCAeQ,O,EAAS;AACd,gBAAM,SAAS,KAAK,SAAL,CAAe,OAAf,kBAAf;;AAEA,mBAAO,OAAO,KAAP,CAAa,OAAb,CAAP;AACH;;;;;;;;;qCAMY,K,EAAO;AAAA;;AAChB,gBAAI,eAAJ;;AAEA,gBAAI,wBAAW,KAAX,CAAJ,EAAuB;AACnB,yBAAS,OAAT;AACH;;AAED,gBAAI,MAAM,OAAN,CAAc,KAAd,CAAJ,EAA0B;AACtB,yBAAS,qBAAW,IAAX,CAAgB,KAAhB,EAAuB;AAAA,2BAAK,MAAK,QAAL,CAAc,CAAd,CAAL;AAAA,iBAAvB,CAAT;AACH,aAFD,MAEO,IAAI,sBAAS,KAAT,CAAJ,EAAqB;AACxB,yBAAS,KAAK,QAAL,CAAc,KAAd,CAAT;AACH;;AAED,mBAAO,MAAP;AACH;;;4BAjCe;AACZ,mBAAO,UAAU,GAAV,CAAc,IAAd,CAAP;AACH;;;;;kBAkCU,a","file":"ConfigFactory.js","sourcesContent":["import {\n    isFunction,\n    isObject\n} from 'lodash';\nimport Config from './Config';\nimport ConfigList from './ConfigList';\n\n/**\n * @private\n * @type {WeakMap}\n */\nconst CONTAINER = new WeakMap();\n\n/**\n * @class\n */\nclass ConfigFactory {\n    /**\n     * @constructor\n     * @param {ConfigContainer} container\n     */\n    constructor(container) {\n        CONTAINER.set(this, container);\n    }\n\n    /**\n     * @readonly\n     * @type {ConfigContainer}\n     */\n    get container() {\n        return CONTAINER.get(this);\n    }\n\n    /**\n     * @private\n     * @param {Object} options\n     * @returns {Config}\n     */\n    initWith(options) {\n        const config = this.container.resolve(Config);\n\n        return config.merge(options);\n    }\n\n    /**\n     * @param {Function|Object|Object[]} value\n     * @returns {Config|ConfigList}\n     */\n    createConfig(value) {\n        let config;\n\n        if (isFunction(value)) {\n            config = value();\n        }\n\n        if (Array.isArray(value)) {\n            config = ConfigList.from(value, x => this.initWith(x));\n        } else if (isObject(value)) {\n            config = this.initWith(value);\n        }\n\n        return config;\n    }\n}\n\nexport default ConfigFactory;\n"]}