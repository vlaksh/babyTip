{"version":3,"sources":["../src/ConfigPatternCache.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AAQA,IAAM,sBAAsB,gBAA5B;;;;;;AAMA,IAAM,cAAc,uBAApB;;;;;;;IAMM,kB;;;;;;;;AAKF,kCAA+C;AAAA,YAAnC,WAAmC,yDAArB,mBAAqB;AAAA;;AAAA;;AAG3C,cAAK,WAAL,GAAmB,WAAnB;AAH2C;AAI9C;;;;;;;;;;;;;;;iCA0BQ,G,EAAK;AACV,gBAAI,CAAC,KAAK,GAAL,CAAS,GAAT,CAAL,EAAoB;AAChB,qBAAK,GAAL,CAAS,GAAT,EAAc,GAAd;AACH;;AAED,mBAAO,KAAK,GAAL,CAAS,GAAT,CAAP;AACH;;;;;;;;;;;4BAQG,G,EAAK,K,EAAO;AACZ,2HAAiB,GAAjB,EAAsB,KAAK,OAAL,CAAa,KAAb,CAAtB;AACH;;;;;;;;;;8BAOI,K,EAAqB;AAAA,gBAAd,OAAc,yDAAJ,EAAI;;AACtB,gBAAM,mBAAmB,KAAK,QAAL,CAAc,KAAd,CAAzB;;AAEA,mBAAO,iBAAiB,OAAjB,CAAP;AACH;;;;;;;;;gCAMO,K,EAAO;AACX,mBAAO,sBAAS,KAAT,EAAgB;AACnB,6BAAa,KAAK;AADC,aAAhB,CAAP;AAGH;;;4BA1DiB;AACd,mBAAO,YAAY,GAAZ,CAAgB,IAAhB,CAAP;AACH;;;;;;;;;;;;0BAWe,K,EAAO;AACnB,wBAAY,GAAZ,CAAgB,IAAhB,EAAsB,KAAtB;AACH;;;;;kBA8CU,kB","file":"ConfigPatternCache.js","sourcesContent":["import {\n    template\n} from 'lodash';\n\n/**\n * @private\n * @type {RegExp}\n */\nconst DEFAULT_INTERPOLATE = /\\[([\\s\\S]+?)]/g;\n\n/**\n * @private\n * @type {WeakMap}\n */\nconst INTERPOLATE = new WeakMap();\n\n/**\n * @class\n * @extends {Map}\n */\nclass ConfigPatternCache extends Map {\n    /**\n     * @constructor\n     * @param {RegExp} [interpolate=/\\[([\\s\\S]+?)]/g]\n     */\n    constructor(interpolate = DEFAULT_INTERPOLATE) {\n        super();\n\n        this.interpolate = interpolate;\n    }\n\n    /**\n     * @type {RegExp}\n     */\n    get interpolate() {\n        return INTERPOLATE.get(this);\n    }\n\n    /**\n     * @example\n     * import {\n     *   patternCache\n     * } from 'webpack-config';\n     *\n     * patternCache.interpolate = /{([\\s\\S]+?)}/g;\n     * @param {RegExp} value\n     */\n    set interpolate(value) {\n        INTERPOLATE.set(this, value);\n    }\n\n    /**\n     * @param {*} key\n     * @returns {RegExp}\n     */\n    getOrSet(key) {\n        if (!this.has(key)) {\n            this.set(key, key);\n        }\n\n        return this.get(key);\n    }\n\n    /**\n     * @override\n     * @param {*} key\n     * @param {String} value\n     * @returns {RegExp}\n     */\n    set(key, value) {\n        return super.set(key, this.compile(value));\n    }\n\n    /**\n     * @param {String} value\n     * @param {Object} options\n     * @returns {String}\n     */\n    eval(value, options = {}) {\n        const compiledTemplate = this.getOrSet(value);\n\n        return compiledTemplate(options);\n    }\n\n    /**\n     * @param {String} value\n     * @returns {Function}\n     */\n    compile(value) {\n        return template(value, {\n            interpolate: this.interpolate\n        });\n    }\n}\n\nexport default ConfigPatternCache;\n"]}