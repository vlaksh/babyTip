{"version":3,"sources":["../src/ConfigMergeCommand.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAIA;;;;;;;;;;;IAMM,kB;;;;;;;;;;;;;;gCAIM,M,EAAQ,O,EAAS;AACrB,gBAAM,QAAQ,KAAK,eAAL,CAAqB,OAArB,CAA6B,MAA7B,EAAqC,OAArC,CAAd;;AAEA,mCAAU,MAAV,EAAkB,KAAlB,EAAyB,UAAC,CAAD,EAAI,CAAJ,EAAU;;AAC/B,oBAAI,MAAM,OAAN,CAAc,CAAd,KAAoB,MAAM,OAAN,CAAc,CAAd,CAAxB,EAA0C;AACtC,sEAAW,CAAX,oCAAiB,CAAjB;AACH,iBAFD,MAEO,IAAI,MAAM,OAAN,CAAc,CAAd,KAAoB,sBAAS,CAAT,CAAxB,EAAqC;AACxC,sEAAW,CAAX,IAAc,CAAd;AACH,iBAFM,MAEA,IAAI,sBAAS,CAAT,KAAe,MAAM,OAAN,CAAc,CAAd,CAAnB,EAAqC;AACxC,4BAAQ,CAAR,0CAAc,CAAd;AACH;AACJ,aARD;AASH;;;;;kBAGU,kB","file":"ConfigMergeCommand.js","sourcesContent":["import {\n    mergeWith,\n    isObject\n} from 'lodash';\nimport ConfigCommand from './ConfigCommand';\n\n/**\n * @class\n * @extends {ConfigCommand}\n */\nclass ConfigMergeCommand extends ConfigCommand {\n    /**\n     * @override\n     */\n    execute(config, options) {\n        const value = this.optionsResolver.resolve(config, options);\n\n        mergeWith(config, value, (x, y) => { // eslint-disable-line consistent-return\n            if (Array.isArray(x) && Array.isArray(y)) {\n                return [...x, ...y];\n            } else if (Array.isArray(x) && isObject(y)) {\n                return [...x, y];\n            } else if (isObject(x) && Array.isArray(y)) {\n                return [x, ...y];\n            }\n        });\n    }\n}\n\nexport default ConfigMergeCommand;\n"]}